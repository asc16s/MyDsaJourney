Today Covered Topics :
Introduction to Java
Writing 1st program in Java 
Variables & data types in Java

Introduction To Java
--> Java was released in 1995
--> Platform: It's a combination of Operating System and Architecture
--> Why is Java called Platform Independent?
    C and C++ compilers are specific to respective platforms. The program executable file on one platform is completely different from other platform. i.e., the .exe
    file on a platform is completely different from another platform. In Java, the compiler will generate a bytecode executable on all other platforms if and only the 
    JVM package is preinstalled in it. This Bytecode can run on multiple platforms which makes it platform-independent.
--> JVM is a machine-specific software that is responsible for converting the bytecode into machine-specific/platform-specific language. JVM is different for every OS
--> Java has a simple compilation and complex running process. Platform independent idea followed by python, c sharp developed by Microsoft
--> Java is simple & secure because it doesn't have a pointers concept. memory can't be accessed easily. JVM acts as a monitoring manager for us. unsecured things don't
    run with the code in JVM. JVM also acts as Automatic garbage collector.
--> Java is a statistically typed language that is similar point with c and C++, therefore execution speed is high in Java C and C++ as compared with Python javascript
--> Statistically typed: we should declare the datatype of a variable before initializing it.
--> There are many more advantages in Java like multithreading, exceptional handling, automatic garbage collector and codes are maintainable

Java Development Kit should be preinstalled to set the Java environment
JDK Contains JRE & Dev Tools( Dev Tools used for development it contains a list of tools like Java Compiler, Java Document Generator, Java Debugger
JRE Contains JVM & Java Class libraries which are used to run Java Programs
Popular IDE for Executing the programs are IntelliJ, Eclipse, BlueJ
public class Main
{
	public static void main(String[] args) {
		System.out.println("Hello World");
	}
}
--> Everything in Java runs in the class only. we can't run the programs without using classes. program execution starts from the main method. JVM searches for 
    the main method to start the execution of the program.
--> public is an access modifier this makes the method accessible to all other classes and packages. for running the program it should be accessible to the JVM 
therefore it should be public.
--> Static methods are methods that are called without creating objects. main method should be static
--> Void is the return type of method
--> program execution starts with main()
--> String[] is an array of strings that is used for taking arguments into it.
--> System is a class, out is an object of print-stream and println is a method in print-stream class.
--> class name and file name should always be same.

Variable naming convention

-> Rule 1 no special characters & keywords are allowed in naming convention.
   Invalid names :- ||a, a#, a!, else, do and all keywords of Java language
-> Use camel case for variable names 🐫
   Ex:- name, nameOfPlayer, ageOfPlayer, current Year
-> For indicating constants write the variable name in upper case & if there are more than 1 word seperate them using a single _
   Ex:- final int MAX_AGE= 200;
        final int max=20;

Types of variables

Primitive (int, char, boolean, byte, short, float, double,)
Non Primitive ( String, Array, classes)
Non primitives are objects of some classes these classes may be user-defined classes or string arrays these things are also classes in Java. When we create an array
we are creating the objects in Java

Types of variables:- 

-> Boolean - true or false

-> Byte - A byte is stored using 8 bits. It is used to store the small values
   Ex:- marks of students
   The range of bytes is -128 to 127 (-2 power 7 to 2 power 7 - 1)
   In 8 bits 1 bit is used to store the sign of the number remains 7 bits are used to store the number in the form of binary way.
   Signed numbers in Java use 2s complement to store the number in the system.
   Positive numbers are stored by converting decimal to binary number
   2power 8 numbers is the capacity of byte including 0 in it

--> Short - 16 bits are required to store the number in short. The range of short is -32768 to 32767 ( -2power 15 to 2 power 15 - 1)

--> int is 32 bit & long is 64bit
    Range of int is -2147483648 to 2147483647 ( - 2power 31 to 2 power 31 - 1)
--> Range of long -2 power 63 to 2 power 63- 1)
    If we need to store a larger number we can use BigInteger class.

--> Float -single precision 32-bit
--> Double - double precision 32-bit
--> Char - it uses 16 bits to store allowing the Unicode characters.
    0 to 2 power 16-1
--> While doing the division of decimal numbers we should mention f with it.
    Float div= 12.3f/23.7f








